//QUERIES

1)(select patient_ID from test) intersect (SELECT patient_ID FROM patient) 

2)select inpatient.Patient_ID,ward.Ward_ID, inpatient.Room_ID, inpatient.Date_of_come, inpatient.Date_of_out, operation.Diagnos_ID, operation.Operation_Name, operation.Date, test.conclusion 
from inpatient, operation, test,room , ward 
WHERE operation.Diagnos_ID = test.Diagnos_ID && inpatient.Patient_ID = test.Patient_ID && ward.Ward_ID = room.Ward_ID && room.Room_ID = inpatient.Room_ID;

3) SELECT doctor.Doctor_ID , doctor.Name , doctor.Surname , patient.Patient_ID,patient.Name, patient.Surname, test.Diagnos_ID, test.conclusion 
FROM doctor , patient, test , medical_record 
WHERE patient.Patient_ID = test.Diagnos_ID && doctor.Doctor_ID = medical_record.Doctor_ID && medical_record.test_id = test.test_id && patient.Patient_ID = 5;

4)select ward.Ward_ID , ward.Ward_Name , COUNT(doctor.Doctor_ID) 
FROM doctor, ward 
WHERE ward.Ward_ID = doctor.Ward_ID && ward.Ward_ID = 5;

5)select ward.Ward_ID, ward.Ward_Name, COUNT(*) 
from ward, doctor
WHERE ward.Ward_ID = doctor.Ward_ID GROUP BY Ward_Name;

6)SELECT * FROM doctor INNER JOIN schedule ON doctor.Schedule_ID = schedule.Schedule_ID ORDER BY doctor.Doctor_ID;

7) SELECT* 
 FROM patient 
 WHERE EXISTS (SELECT medical_record.Patient_ID FROM medical_record WHERE patient.Patient_ID = medical_record.Patient_ID);
 
8) select ward.Ward_ID, ward.Ward_Name, COUNT(*) 
from ward, inpatient, room 
WHERE ward.Ward_ID = room.Ward_ID && room.Room_ID = inpatient.Patient_ID GROUP BY Ward_ID;

9) SELECT AVG(patient.Age) FROM patient;

10)SELECT * FROM patient 
   WHERE patient.Age > (SELECT AVG(patient.Age) FROM patient)  
   ORDER BY `patient`.`Patient_ID` ASC;
   
11) SELECT * FROM nurse INNER JOIN schedule ON nurse.Schedule_ID = schedule.Schedule_ID ORDER BY nurse.Nurse_ID;

12) SELECT * FROM doctor INNER JOIN schedule ON doctor.Schedule_ID = schedule.Schedule_ID && schedule.date LIKE '%Tu%' ORDER BY doctor.Doctor_ID;


//TRIGGERS

DELIMITER $$

CREATE TRIGGER patient_bed AFTER INSERT ON inpatient
 FOR EACH ROW BEGIN
  
    set @bed := (SELECT num_of_beds from room WHERE room.Room_ID = new.Room_ID);
    
    UPDATE room set num_of_beds = @bed-1 WHERE room.Room_ID = new.Room_ID;

END $$
DELIMITER ;; 

DELIMITER $$

CREATE TRIGGER patient_archive BEFORE DELETE ON patient
 FOR EACH ROW BEGIN
 
    SET @DOC_ID := (Select doctor_ID FROM diagnos WHERE diagnos.Patient_ID = old.Patient_ID);
    SET @DAG_ID := (Select diagnos_ID FROM diagnos WHERE diagnos.Patient_ID = old.Patient_ID);
    set @idx := (SELECT MAX(archive_ID) FROM archive);
    
    INSERT INTO archive VALUES(COALESCE(@idx, 0)+1, old.patient_id, old.name, old.surname, old.age, old.gender, old.home_address, old.phone_number, COALESCE(@DOC_ID, 0), COALESCE(@DAG_ID, 0));
END $$

DELIMITER ;;

DELIMITER $$
 CREATE TRIGGER change_bed BEFORE UPDATE
   ON inpatient FOR EACH ROW
BEGIN
   UPDATE room SET Num_of_beds = Num_of_beds - 1 WHERE room.Room_ID = new.Room_ID;
    UPDATE room SET Num_of_beds = Num_of_beds + 1 WHERE room.Room_ID = old.Room_ID;
END $$
DELIMITER ;;


//TRANSACTION

START TRANSACTION; 
    	INSERT INTO patients VALUES(101 , 'Callie' , 'Stovold' , 18  , '+7 (463) 599-9466)' , '743 Truax Street' ,'Female');
     INSERT INTO test VALUES(101 , 101, 55 , 'Cuipma' , 'Arnoglo via neck');
     INSERT INTO medical_record VALUES(101 , 43 , 101);
COMMIT; 

//Constraints
ALTER TABLE ambulance ADD CONSTRAINT ambul_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE nurse ADD CONSTRAINT nur_sch_fk FOREIGN KEY (schedule_ID) REFERENCES schedule(schedule_ID);
ALTER TABLE nurse ADD CONSTRAINT nur_r_fk FOREIGN KEY (room_ID) REFERENCES room(room_ID);
ALTER TABLE room ADD CONSTRAINT room_fk FOREIGN KEY (ward_ID) REFERENCES ward(ward_ID);
ALTER TABLE registration ADD CONSTRAINT reg_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE doctor ADD CONSTRAINT doc_sch_fk FOREIGN KEY (schedule_ID) REFERENCES schedule(schedule_ID);
ALTER TABLE doctor ADD CONSTRAINT doc_w_fk FOREIGN KEY (ward_ID) REFERENCES ward(ward_ID);
ALTER TABLE outpatient ADD CONSTRAINT out_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE inpatient ADD CONSTRAINT in_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE inpatient ADD CONSTRAINT in_r_fk FOREIGN KEY (room_ID) REFERENCES room(room_ID);
ALTER TABLE archive ADD CONSTRAINT arch_fk FOREIGN KEY (diagnos_ID) REFERENCES diagnos(diagnos_ID);
ALTER TABLE test ADD CONSTRAINT test_p_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE test ADD CONSTRAINT test_fk FOREIGN KEY (diagnos_ID) REFERENCES diagnos(diagnos_ID);
ALTER TABLE medical_record ADD CONSTRAINT medical_record_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE medical_record ADD CONSTRAINT medical_recor_fk FOREIGN KEY (doctor_id) REFERENCES doctor(doctor_ID);
ALTER TABLE medical_record ADD CONSTRAINT medical_reco_fk FOREIGN KEY (test_id) REFERENCES test(test_ID);
ALTER TABLE operation ADD CONSTRAINT operation_fk FOREIGN KEY (Patient_ID) REFERENCES patient(Patient_ID);
ALTER TABLE operation ADD CONSTRAINT op_fk FOREIGN KEY (diagnos_id) REFERENCES diagnos(diagnos_ID);

//VIEW

CREATE VIEW empty as 
SELECT room.num_of_beds , room.Room_ID, room.Ward_ID 
FROM room, inpatient, ward  
WHERE ward.Ward_ID = room.Ward_ID && room.Room_ID = inpatient.Room_ID
group by room_id;

//INDEXES

CREATE INDEX patientname ON Patient(patient_id , name , surname); 
CREATE INDEX doctorname ON Doctor(doctor_id); 
